#include "rclcpp/rclcpp.hpp"
#include "tutorial_interfaces/srv/st_len.hpp"

#include <memory>

void add(const std::shared_ptr<tutorial_interfaces::srv::StLen::Request> request,
         std::shared_ptr<tutorial_interfaces::srv::StLen::Response> response)
{
  int sum = 0;
  for (const auto& c : request->a) {
    sum += static_cast<int>(c);
  }
  response->sum = sum;
  RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "Incoming request\na: %s b: %ld",
              request->a.c_str(), request->b);
  RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "Sending back response: [%ld]", (long int)response->sum);
}


int main(int argc, char **argv)
{
  rclcpp::init(argc, argv);
  std::shared_ptr<rclcpp::Node> node = rclcpp::Node::make_shared("st_len_server");
  rclcpp::Service<tutorial_interfaces::srv::StLen>::SharedPtr service =
      node->create_service<tutorial_interfaces::srv::StLen>("st_len",  &add);
  RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "Ready to get st len.");
  rclcpp::spin(node);
  rclcpp::shutdown();
}



//#include "rclcpp/rclcpp.hpp"
//#include "tutorial_interfaces/srv/st_len.hpp"                                        // CHANGE
//
//#include <memory>
//
//void add(const std::shared_ptr<tutorial_interfaces::srv::StLen::Request> request,     // CHANGE
//          std::shared_ptr<tutorial_interfaces::srv::StLen::Response>       response)  // CHANGE
//{
// // response->sum = request->a + request->b;                                      // CHANGE
//  response->sum = 5 + request->b;                                      // CHANGE
//  RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "Incoming request\na: %s" " b: %ld",  // CHANGE
//                request->a, request->b);                                         // CHANGE
//  RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "sending back response: [%ld]", (long int)response->sum);
//}
//
//int main(int argc, char **argv)
//{
//  rclcpp::init(argc, argv);
//
//  std::shared_ptr<rclcpp::Node> node = rclcpp::Node::make_shared("st_len_server");   // CHANGE
//
//  rclcpp::Service<tutorial_interfaces::srv::StLen>::SharedPtr service =               // CHANGE
//    node->create_service<tutorial_interfaces::srv::StLen>("st_len",  &add);   // CHANGE
//
//  RCLCPP_INFO(rclcpp::get_logger("rclcpp"), "Ready to get st len.");                     // CHANGE
//
//  rclcpp::spin(node);
//  rclcpp::shutdown();
//}
